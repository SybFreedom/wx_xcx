// pages/submitOrder/submitOrder.js
var app = getApp();
var dateTimePicker = require('../../utils/dateTimePicker.js');
const clientApi = require('../../utils/clientApi.js').clientApi
var tools = require('../../utils/util.js')
let statu = 0;
let orderType = 0;
Page({

  /**
   * 页面的初始数据
   */
  data: {
    item: {},
    addressInfo: {
      userName: '',
      phone: '',
      address: '',
      location: '',
      id: '',
      status: '',
      userId: ''
    },
    saddressInfo: {
      userName: '',
      phone: '',
      address: '',
      location: '',
      id: '',
      status: '',
      userId: ''
    },
    currentYear: 2018,
    firstInfo: {
      firstMoney: '0',
      isFirst: 0
    },
    selectedGoodList: [],
    shipFeeMoney: 0,
    totalPrice: 0,
    totalPriceBasic: 0,
    note: '',
    shipPrice: 0,
    shipPriceBasic: 0,
    dateTimeArray: null,
    dateTime: null,
    dateTimeArray1: null,
    dateTime1: null,
    startYear: 2018,
    endYear: 2018,
    startime: "",
    endtime: "",
    jdisplay: 'flex',
    sdisplay: 'flex',
    canCheck1: false,
    canCheck2: false,
    pet_count: 1,
    orderType:0
  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function(options) {
    var _this = this;
    wx.getStorage({
      key: 'orderType',
      success: function(res) {
        orderType = res.data;
        _this.setData({
          orderType:orderType
        })
      },
    })
    this.initDates();
    wx.getSystemInfo({
      success: (res) => {
        _this.setData({
          windowHeight: res.windowHeight,
          windowWidth: res.windowWidth
        })
      }
    })
    console.log(options.datas)
    let list = JSON.parse(options.datas);
    let shopItem = JSON.parse(options.item);
    let shipPrice = options.shipPrice;
    this.setData({
      shipFeeMoney: shopItem.servicePrice * 1,
      item: shopItem,
      shipPrice: shipPrice * 1,
      selectedGoodList: list,
    })
    this.calculateShipPrice();

  },

  calculateAllMoeny: function() {
    var totalPrice = 0;
    this.data.selectedGoodList.forEach(function(item, index) {
      totalPrice += item.price * item.selectCount;
    });
    totalPrice += this.data.shipPrice * 1;
    if (this.data.firstInfo.isFirst == 1) {
      totalPrice -= this.data.firstInfo.firstMoney * 1;
      totalPrice = totalPrice <= 0 ? 0.01 : totalPrice;
    }
    totalPrice = totalPrice.toFixed(2);
    this.setData({
      totalPrice: totalPrice,
      totalPriceBasic: totalPrice
    })
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function() {

  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function() {
    var timestamp = Date.parse(new Date());
    timestamp = timestamp / 1000;
    var n = timestamp * 1000;
    var date = new Date(n);
    var currentYear = date.getFullYear();
    this.setData({
      currentYear: currentYear,
      addressInfo: app.globalData.shippingAddress,
      saddressInfo: app.globalData.sshippingAddress
    })
    // console.log(this.data.addressInfo);
    // console.log(this.data.saddressInfo);
    this.calculateShipPrice();
  },
  calculateShipPrice: function() {
    if (!app.globalData.shippingAddress) {
      return
    }
    if (!this.data.item) {
      return
    }
    var shipAddress = app.globalData.shippingAddress
    var userLocation = app.globalData.userLocationAddress
    var distance = tools.getGreatCircleDistance(shipAddress.lat, shipAddress.lng, this.data.item.lat, this.data.item.lng);

    var total = 0,
      shipServicePrice = 0,
      shipGoodsPriveTep = false,
      shipServicePriveTep = false;
    this.data.selectedGoodList.forEach(function(item, index) {
      total += item.price * item.selectCount;
      if (item.goodsType == 1) {
        shipGoodsPriveTep = true;
      } else {
        shipServicePriveTep = true;
      }
    });

    if (total > 0) {
      if (shipGoodsPriveTep && shipServicePriveTep) {
        shipServicePrice = this.data.item.goodsPrice > this.data.item.baseCharg ? this.data.item.goodsPrice : this.data.item.baseCharg;

      } else {
        shipServicePrice = shipGoodsPriveTep ? this.data.item.goodsPrice : this.data.item.baseCharg;
        console.log('k:::::::::::::::::::::::::::::', this.data.item.baseCharg)
      }
    }

    var shipPrice = shipServicePrice;
    console.log(shipPrice)
    console.log("d::::::", distance)
    console.log('b:::::', this.data.item.baseDistance)
    if (distance > this.data.item.baseDistance) {
      var remainDistance = (distance - this.data.item.baseDistance) / 1000;
      remainDistance = Math.ceil(remainDistance)
      console.log('r::::::', remainDistance)
      console.log(this.data.item.overCharg)
      shipPrice = shipPrice * 1 + remainDistance * this.data.item.overCharg * 1;
    }

    this.setData({
      shipPrice: shipPrice,
      shipPriceBasic: shipPrice
    })
    console.log('p:::::::::::::::::::::::::::::::', this.data.shipPrice)
    var that = this;
    that.calculateAllMoeny();
    clientApi.getUserFirstPayInfo({
      'userId': app.userId
    }).then(d => {
      if (d.success == 1 && d.data) {
        that.setData({
          firstInfo: d.data
        })
        that.calculateAllMoeny();
      }
    })
    console.log(that.data.selectedGoodList)
  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function() {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function() {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function() {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function() {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function() {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function() {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function() {

  },

  input: function(e) {
    this.data.note = e.detail.value;
  },

  //提交订单
  commitBtClick: function() {
    if (statu == 0 || orderType == 4) {
      if (tools.isEmpty(this.data.addressInfo.phone) || tools.isEmpty(this.data.saddressInfo.phone)) {
        wx.showModal({
          title: '请添加地址'
        })
        return;
      }
    } else if (statu == 1) {
      if (tools.isEmpty(this.data.addressInfo.phone)) {
        wx.showModal({
          title: '请添加地址'
        })
        return;
      }
    } else if (statu == 2) {
      if (tools.isEmpty(this.data.saddressInfo.phone)) {
        wx.showModal({
          title: '请添加地址'
        })
        return;
      }
    }


    let goods = this.data.selectedGoodList.map(d => {
      var item = {};
      item.goodsId = d.id;
      item.amount = d.selectCount;
      return item;
    });

    var _this = this;
    if(orderType==4){
      var param = {
        userId: app.userId,
        shopId: _this.data.item.id,
        addressId: _this.data.addressInfo.id,
        saddressId: _this.data.saddressInfo.id,
        note: _this.data.note,
        receiveTime: _this.data.startTime,
        deliverTime: _this.data.endTime,
        petAmount: _this.data.pet_count
      };
    }else{
    if(statu == 0){
      var param = {
        userId: app.userId,
        shopId: _this.data.item.id,
        addressId: _this.data.addressInfo.id,
        saddressId: _this.data.saddressInfo.id,
        goods: goods,
        note: _this.data.note,
        receiveTime: _this.data.startTime,
        deliverTime: _this.data.endTime,
        petAmount: _this.data.pet_count
      };
    } else if (statu == 1) {
      var param = {
        userId: app.userId,
        shopId: _this.data.item.id,
        addressId: _this.data.addressInfo.id,
        saddressId: '',
        goods: goods,
        note: _this.data.note,
        receiveTime: _this.data.startTime,
        deliverTime:'',
        petAmount: _this.data.pet_count
      };
    } else if (statu == 3) {
      var param = {
        userId: app.userId,
        shopId: _this.data.item.id,
        addressId: '',
        saddressId: _this.data.saddressInfo.id,
        goods: goods,
        note: _this.data.note,
        receiveTime: '',
        deliverTime: _this.data.endTime,
        petAmount: _this.data.pet_count
      };
    }
    }

    var paramJsonString = JSON.stringify(param);


    console.log(paramJsonString);
    if (wx.canIUse('showLoading')) {
      wx.showLoading({
        title: '生成订单中。。。',
      })
    }


    clientApi.addOrder({
      orderStr: paramJsonString
    }).then(d => {
      console.log(d)
      if (d.success == -1) {
        wx.hideLoading();
        wx.showToast({
          title: '提交信息有误，请检查',
          icon: 'none'
        })
      }
      if (d.success == 1) {

        if (wx.canIUse('hideLoading')) {
          wx.hideLoading();
        }

        wx.requestPayment({
          timeStamp: d.data.timestamp,
          nonceStr: d.data.noncestr,
          package: 'prepay_id=' + d.data.prepayid,
          signType: d.data.signtype,
          paySign: d.data.sign,
          'success': function(res) {
            wx.showToast({
              title: '支付成功',
            })
            app.wxPayState = true;
            wx.redirectTo({
              url: '/pages/msg/mgs_success'
            })
          },
          'fail': function(res) {
            wx.showModal({
              title: '提示！',
              content: '支付失败',
            })
          }
        })
      }
    });

  },
  //接宠地址
  chooseAddress: function() {
    wx.navigateTo({
      url: '../../pages/myShippingAddress/myShippingAddress?chooseType=1',
      success: function(res) {},
      fail: function(res) {},
      complete: function(res) {},
    })
  },
  //送宠地址
  schooseAddress: function() {
    wx.navigateTo({
      url: '../../pages/myShippingAddress/myShippingAddress?chooseType=10',
      success: function(res) {},
      fail: function(res) {},
      complete: function(res) {},
    })
  },
  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function() {
    return {
      title: app.shareTitle,
      imageUrl: '../../images/share_icon.jpg'
    }
  },
  changeDateTime(e) {
    this.setData({
      dateTime: e.detail.value
    });
  },
  changeDateTime1(e) {
    this.setData({
      dateTime1: e.detail.value
    });
  },
  changeDateTimeColumn(e) {
    var arr = this.data.dateTime,
      dateArr = this.data.dateTimeArray;

    var currentYear = this.data.currentYear;
    arr[e.detail.column] = e.detail.value;
    dateArr[2] = dateTimePicker.getMonthDay(currentYear, dateArr[0][arr[0]]);
    this.setData({
      dateTimeArray: dateArr,
      dateTime: arr
    });
    this.calculateStartDateAndEndDate();
  },
  changeDateTimeColumn1(e) {
    var arr = this.data.dateTime1,
      dateArr = this.data.dateTimeArray1;
    var currentYear = this.data.currentYear;
    arr[e.detail.column] = e.detail.value;
    dateArr[2] = dateTimePicker.getMonthDay(currentYear, dateArr[0][arr[0]]);

    this.setData({
      dateTimeArray1: dateArr,
      dateTime1: arr
    });
    this.calculateStartDateAndEndDate();
  },
  initDates() {
    var currentYear = this.data.currentYear;
    var obj = dateTimePicker.dateTimePicker(currentYear, currentYear);
    obj.dateTimeArray.splice(0, 1);
    obj.dateTime.splice(0, 1);
    obj.dateTimeArray.splice(4, 1);
    obj.dateTime.splice(4, 1);

    obj.dateTime.splice(1, 0, 0);
    obj.dateTimeArray.splice(1, 0, ["月"]);
    obj.dateTime.splice(3, 0, 0);
    obj.dateTimeArray.splice(3, 0, ["日"]);
    obj.dateTime.splice(5, 0, 0);
    obj.dateTimeArray.splice(5, 0, ["时"]);
    obj.dateTime.splice(7, 0, 0);
    obj.dateTimeArray.splice(7, 0, ["分"]);
    var obj1 = dateTimePicker.dateTimePicker(currentYear, currentYear);
    obj1.dateTimeArray.splice(0, 1);
    obj1.dateTime.splice(0, 1);
    obj1.dateTimeArray.splice(4, 1);
    obj1.dateTime.splice(4, 1);

    obj1.dateTime.splice(1, 0, 0);
    obj1.dateTimeArray.splice(1, 0, ["月"]);
    obj1.dateTime.splice(3, 0, 0);
    obj1.dateTimeArray.splice(3, 0, ["日"]);
    obj1.dateTime.splice(5, 0, 0);
    obj1.dateTimeArray.splice(5, 0, ["时"]);
    obj1.dateTime.splice(7, 0, 0);
    obj1.dateTimeArray.splice(7, 0, ["分"]);
    this.setData({
      dateTime: obj.dateTime,
      dateTimeArray: obj.dateTimeArray,
      dateTimeArray1: obj1.dateTimeArray,
      dateTime1: obj1.dateTime
    });

    this.calculateStartDateAndEndDate();
  },

  calculateStartDateAndEndDate() {

    var dateTime = this.data.dateTime;
    var dateTime1 = this.data.dateTime1;
    var dateTimeArray = this.data.dateTimeArray;
    var dateTimeArray1 = this.data.dateTimeArray1;
    var currentYear = this.data.currentYear;
    var startTime = currentYear + "-" + dateTimeArray[0][dateTime[0]] + "-" + dateTimeArray[2][dateTime[2]] + " " + dateTimeArray[4][dateTime[4]] + ":" + dateTimeArray[6][dateTime[6]]

    var endTime = currentYear + "-" + dateTimeArray1[0][dateTime1[0]] + "-" + dateTimeArray1[2][dateTime1[2]] + " " + dateTimeArray1[4][dateTime1[4]] + ":" + dateTimeArray1[6][dateTime1[6]]

    this.setData({
      startTime: startTime,
      endTime: endTime
    })
  },
  //跳转到goodsDetail
  gogoodsDetail: function(e) {
    let objItem = e.currentTarget.dataset.item;
    let item = JSON.stringify(objItem);
    wx.navigateTo({
      url: '/pages/goodsDetail/goodsDetail?item=' + item,
    })
  },

  showitem: function() {
    console.log(this.data.selectedGoodList);
  },
  checkboxChange: function(e) {
    console.log(e)
    if (e.detail.value.length == 2) {
      this.setData({
        jdisplay: 'flex',
        sdisplay: 'flex',
        canCheck1: false,
        canCheck2: false
      })
      statu = 0
    } else if (e.detail.value.length == 1) {
      if (e.detail.value[0] == '111') {
        this.setData({
          jdisplay: 'flex',
          sdisplay: 'none',
          canCheck1: true,
          canCheck2: false
        })
        statu = 1
      } else {
        this.setData({
          jdisplay: 'none',
          sdisplay: 'flex',
          canCheck1: false,
          canCheck2: true
        })
        statu = 2
      }
    }
  },

  minuscount: function() {
    if (this.data.pet_count > 1) {
      this.data.pet_count = this.data.pet_count - 1;
      this.data.shipPrice = parseFloat(this.data.shipPriceBasic) + 10 * (this.data.pet_count - 1);
      this.data.totalPrice = (parseFloat(this.data.totalPriceBasic) + 10 * (this.data.pet_count - 1)).toFixed(2);
      this.setData({
        pet_count: this.data.pet_count,
        shipPrice: this.data.shipPrice,
        totalPrice: this.data.totalPrice
      })
    }
  },
  addcount: function() {
    this.data.pet_count = this.data.pet_count + 1;
    this.data.shipPrice = parseFloat(this.data.shipPriceBasic) + 10 * (this.data.pet_count - 1);
    this.data.totalPrice = (parseFloat(this.data.totalPriceBasic) + 10 * (this.data.pet_count - 1)).toFixed(2);
    this.setData({
      pet_count: this.data.pet_count,
      shipPrice: this.data.shipPrice,
      totalPrice: this.data.totalPrice
    })
  }
})