// pages/chooseArea/chooseArea.js
var app = getApp();
var tools = require('../../utils/util.js');
var txmap = require('../../libs/map/qqmap-wx-jssdk.min.js');
const clientApi = require('../../utils/clientApi.js').clientApi
Page({

  /**
   * 页面的初始数据
   */
  data: {
    openList:[],
    searchResult:[],
    address: {},
    chooseType:'' 
  },

  /**
   * 根据输入内容检索地址
   */
  bindKeyInput: function (e) {
    var that = this;
    // 引入SDK核心类
    var QQMapWX = txmap;

    // 实例化API核心类
    var demo = new QQMapWX({
      key: app.globalData.txMapak // 必填
    });


    demo.getSuggestion({
      region:'贵阳市',
      region_fix:0,
      keyword: e.detail.value,
      success: function (res) {
        that.setData({
          searchResult:res.data
        })
      }
    });
  },

  postionUserLocation: function () {
    var that = this;

    var QQMapWX = txmap;

    // 实例化API核心类
    var demo = new QQMapWX({
      key: app.globalData.txMapak // 必填
    });

    // 调用接口
    demo.reverseGeocoder({
      success: function (res) {
        
        var res = res.result;
          app.globalData.userLocationAddress.city = res.ad_info.city;
          app.globalData.userLocationAddress.provinces = res.ad_info.province;
          app.globalData.userLocationAddress.district = res.ad_info.district;
          app.globalData.userLocationAddress.name = tools.formatNullObj(res.address_component.district) + tools.formatNullObj(res.address_reference.landmark_l2.title) + '(' + tools.formatNullObj(res.address_reference.street.title) + '附近' + tools.formatNullObj(res.address_reference.street._distance) + '米)';
          app.globalData.userLocationAddress.location = res.location;
          app.globalData.userLocationAddress.adcode = res.ad_info.adcode;
          app.globalData.userLocationAddress.customAddress = res.formatted_addresses.recommend;

          that.setData({
            address: app.globalData.userLocationAddress
          });
        
      }
    });
  },

  chooseUserLocation: function () {
    if (this.data.chooseType == 1) {
      this.setData({
        address: app.globalData.userLocationAddress
      });
    } else {
      var customAdress = app.globalData.userLocationAddress.name;
      app.globalData.temAddress.customAddress = customAdress;
      app.globalData.temAddress.location = app.globalData.userLocationAddress.location;
    }
    wx.navigateBack({
      delta: 1,
    })
  },
  
  openItemClick: function (r){
    var openItem = r.currentTarget.dataset.openitem;
    if (this.data.chooseType == 1) {
      app.globalData.userLocationAddress.city = openItem.city;
      app.globalData.userLocationAddress.adcode = openItem.areaCode;
      app.globalData.userLocationAddress.name = openItem.city;
    }
    wx.navigateBack({
      delta: 1,
    })
  },

  itemClick: function (res){
    
    var index = res.currentTarget.dataset.id;
    var addressComponent = this.data.searchResult[index];
    var customAddress = addressComponent.province + addressComponent.city + addressComponent.district + addressComponent.title;
    if (this.data.chooseType == 1) {
      app.globalData.userLocationAddress.city = addressComponent.city;
      app.globalData.userLocationAddress.district = addressComponent.district;
      app.globalData.userLocationAddress.name = addressComponent.title;
      app.globalData.userLocationAddress.location = addressComponent.location;
      app.globalData.userLocationAddress.adcode = addressComponent.adcode;
      app.globalData.userLocationAddress.customAddress = customAddress;
      this.setData({
        address: app.globalData.userLocationAddress,
      });
    } else {
      app.globalData.temAddress.city = addressComponent.city;
      app.globalData.temAddress.district = addressComponent.district;
      app.globalData.temAddress.name = addressComponent.title;
      app.globalData.temAddress.location = addressComponent.location;
      app.globalData.temAddress.customAddress = customAddress;
      this.setData({
        address: app.globalData.temAddress,
      });
    }


    
    wx.navigateBack({
      delta: 1,
    })
  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    
    this.setData({
      address: app.globalData.userLocationAddress,
      chooseType: options.type
    })


    if (options.type == 1) {
      var that = this;
      clientApi.getOpenCityList().then(d => {
        that.setData({
          openList:d.data
        })
      });
    }

    
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {
    
  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {
  
  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {
  
  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {
  
  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {
  
  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {
  
  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {
    return {
      title: app.shareTitle,
      imageUrl: '../../images/share_icon.jpg'
    }
  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {
  
  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {
  
  }
})